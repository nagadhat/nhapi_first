{
    "openapi": "3.0.0",
    "info": {
        "title": "NH Api",
        "version": "1"
    },
    "paths": {
        "/api/all-cart-product/{userId}": {
            "get": {
                "tags": [
                    "Cart Product"
                ],
                "summary": "Get Cart Product by User ID",
                "description": "Returns Products",
                "operationId": "893474df5a2caa8f9e9a7607e460e995",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This will return all product listed in cart of the given user id.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cartId": {
                                            "type": "intiger",
                                            "example": "567"
                                        },
                                        "productId": {
                                            "type": "intiger",
                                            "example": "2562"
                                        },
                                        "orderType": {
                                            "type": "string",
                                            "example": "Regular"
                                        },
                                        "cartProductImage": {
                                            "type": "string",
                                            "example": "media/products/26072021737515495.webp"
                                        },
                                        "cartProductName": {
                                            "type": "string",
                                            "example": "DIBAOLING Hand Sanitizer Formula"
                                        },
                                        "cartProductQuantity": {
                                            "type": "intiger",
                                            "example": "10"
                                        },
                                        "cartProductUnitPrice": {
                                            "type": "intiger",
                                            "example": "500"
                                        },
                                        "cartProductVendorId": {
                                            "type": "intiger",
                                            "example": "40"
                                        },
                                        "cartProductReturnPolicy": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "cartProductSlug": {
                                            "type": "string",
                                            "example": "DIBAOLING-Hand-Sanitizer-Formula-610abac3cc9c4"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/add-to-cart": {
            "post": {
                "tags": [
                    "Cart Product"
                ],
                "summary": "Add to cart",
                "description": "This end-point will add products to cart",
                "operationId": "add-to-cart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": "3121"
                                    },
                                    "order_type": {
                                        "type": "string",
                                        "example": "Regular"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1559"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "product_variation_size": {
                                        "type": "integer",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "This will return status, msg, and basic information about the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Product added to cart successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Basic information about the cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders CRUD"
                ],
                "summary": "Get orders list",
                "operationId": "803fc5d32177a888e12dd7a8f9d0e6d4",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders CRUD"
                ],
                "summary": "Store new order",
                "description": "Returns project data",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders CRUD"
                ],
                "summary": "Get order information",
                "description": "Returns order data",
                "operationId": "323fecf06eebc01290343e81c470453f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders CRUD"
                ],
                "summary": "Update existing order",
                "description": "Returns updated project data",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders CRUD"
                ],
                "summary": "Delete existing order",
                "description": "Deletes a record and returns no content",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/all-category": {
            "post": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get category full list or short list as your requirment.",
                "description": "By default this end-point will provide a short list of category with three column ('id', 'title', 'slug'). For full list you have to provide a body param with the key 'list_type' and value = full_list. Pass body param with the key 'slider_menu' and value = 'menu_view' to get all the categories for Slider-Menu.  Used in: index",
                "operationId": "ac7ee3580085523b8e5e1a00809550f5",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "list_type"
                                ],
                                "properties": {
                                    "list_type": {
                                        "type": "string",
                                        "example": "short_list"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-category-top-menu": {
            "get": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get category list for home_page_top_menu.",
                "description": "By default this end-point will provide category list where 'home_page_top_menu' = 1. This response used in just beneath the main slide  Used in: index",
                "operationId": "754fcb7f7323893d38d6869641620de1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-category-slide": {
            "get": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get category list for the menu just left side in the main slider.",
                "operationId": "3fb511fba76449e47b6d3c22ba6cdcac",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-product-new": {
            "get": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get new product list with target audience 0.",
                "operationId": "ca6f8bf03ced734d193667c8b0723ce9",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-product-flash-sale": {
            "get": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get Flash Sale product list.",
                "operationId": "7995f25006d826152c3328d9bfc08827",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-product-flashsale-info": {
            "get": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get Flash Sale info.",
                "description": "Get Flash Sale info like, Flash Sale active or not, Flash Sale start and end date.",
                "operationId": "076dbd6f48e7db3c4a66df080b8712c7",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-product-by-category-id": {
            "post": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get product list according to category ID.",
                "description": "By default this end-point will provide 10 record according to given category ID. Giving an integer category ID with key 'category_id' is must. Then you can get custom number of record by providing a body param with the key 'number_of_records' & an integer as value. You may also get random record back by providing a body param with the key 'random' = true. Used in: index",
                "operationId": "8b92ea52795cc61a328375be99b699b7",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "list_type"
                                ],
                                "properties": {
                                    "list_type": {
                                        "type": "string",
                                        "example": "short_list"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-category-main": {
            "post": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get only mother category from categories table.",
                "description": "By default this end-point will provide 10 mother category from categories table. For custom number of records you have to provide a body param with the key 'limit' and value must be an integer.  Used in: index",
                "operationId": "169eab2d13831e01c5ecd2790d2b8a6e",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "limit"
                                ],
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-brand": {
            "get": {
                "tags": [
                    "Products & Categories"
                ],
                "summary": "Get brand list with it's all data.",
                "operationId": "dadeeaeed8ae5c45aae79d0fdafa8b27",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "Returns project data",
                "operationId": "register",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "salam.pustcse@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout user and invalidate token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/nh-registration": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "NH Registration",
                "description": "This end-point will be used for registration new user. You have to provide body params with the keys of- 'username', 'password', 'password_confirmation', and 'email' (Optional). The 'username' must be a valid phone number and password length at least 6 digit. After registration, system will send an OTP to given username (phone), that you must verify in '/api/registration-otp-verify'.",
                "operationId": "nh-registration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "password_confirmation",
                                    "email"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "name@domain.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/registration-otp-verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Registration OTP",
                "description": "This end-point will be used for verify Registration OTP.",
                "operationId": "registration-otp-verify",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "user_otp"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "user_otp": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/nh-login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "NH Login",
                "description": "Login by username, password. Username must be phone number and 11 digit.",
                "operationId": "nh-login",
                "requestBody": {
                    "description": "Pass user credentials (username and password).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorised username or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/nh-logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "NH Logout",
                "description": "Logout user and invalidate token",
                "operationId": "nh logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "string",
                                            "example": "basic user info"
                                        },
                                        "login_status": {
                                            "type": "string",
                                            "example": "false"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/nh-forget-password-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get OTP for Forget Password",
                "description": "This end-point will provide OTP for Forget Password. You have to pass body param with the key name 'username' and it must be a valid phone number, already registered.",
                "operationId": "nh-forget-password-otp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forget-password-otp-verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP for Forget Password",
                "description": "For verify the 'Forget Password OTP' you have to pass body param with the key 'username' and 'user_otp'.",
                "operationId": "forget-password-otp-verify",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "user_otp": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password-reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update Password",
                "description": "This end-point will update previous password with given password. You have to pass body param with the key 'username', 'password' and 'password_confirmation'.",
                "operationId": "password-reset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "This will return user_info, msg, status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_info": {
                                            "type": "string",
                                            "example": "Basic information of the user"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Password has been updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Order": {
                "title": "Order Model",
                "description": "Store order request body data",
                "properties": {
                    "client": {
                        "title": "client",
                        "description": "Name of the new client",
                        "type": "string",
                        "example": "Dr solayman"
                    },
                    "details": {
                        "title": "details",
                        "description": "details of the order",
                        "type": "string",
                        "example": "Dr solayman"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "http",
                "flows": {
                    "password": {
                        "authorizationUrl": "https://web-api.nagadhat.com.bd/oauth/authorize",
                        "tokenUrl": "https://web-api.nagadhat.com.bd/oauth/token",
                        "refreshUrl": "https://web-api.nagadhat.com.bd/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}