{
    "openapi": "3.0.0",
    "info": {
        "title": "NH Api",
        "version": "1"
    },
    "paths": {
        "/api/cart-item-by-user/{userId}/{locationId}": {
            "get": {
                "tags": [
                    "Cart Product"
                ],
                "summary": "Get cart data",
                "description": "Returns cart data by user_id and location_id when user is logged in.",
                "operationId": "60648a199f98cacf210440c09d2f51cd",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/cart-item-by-public/{uId}/{locationId}": {
            "get": {
                "tags": [
                    "Cart Product"
                ],
                "summary": "Get cart data",
                "description": "Returns cart data by unique identifier according to location when user is not logged in.",
                "operationId": "445e635575b6cf7a59aa8cb7eae9303b",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/add-to-cart": {
            "post": {
                "tags": [
                    "Cart Product"
                ],
                "summary": "Add to cart",
                "description": "This end-point will add products to cart, outlet_id, location_id, product_id, order_type, quantity fields are required, including user_id / uid, product_variation_size field is optional. When user is logged in include user-id, when user is not logged in or not a registered user enter uid. uid is a unique identifier which will represent a public users identity according to the location they are. if location changes cart item could change accordingly.",
                "operationId": "add-to-cart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "outlet_id",
                                    "location_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": "3121"
                                    },
                                    "uid": {
                                        "type": "string",
                                        "example": "userAgentUniqueId"
                                    },
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "example": "67"
                                    },
                                    "order_type": {
                                        "type": "string",
                                        "example": "Regular"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1559"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "product_variation_size": {
                                        "type": "integer",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "This will return status, msg, and basic information about the cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Product added to cart successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Basic information about the cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Get orders list",
                "operationId": "803fc5d32177a888e12dd7a8f9d0e6d4",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Store new order",
                "description": "Returns project data",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Get order information",
                "description": "Returns order data",
                "operationId": "323fecf06eebc01290343e81c470453f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Update existing order",
                "description": "Returns updated project data",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Delete existing order",
                "description": "Deletes a record and returns no content",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/get-all-outlet": {
            "get": {
                "tags": [
                    "Outlet & Location"
                ],
                "summary": "Get outlet list",
                "description": "Get outlet list",
                "operationId": "7efe8880ef119ed94c93013b4c97388a",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-outlet/{outletId}": {
            "get": {
                "tags": [
                    "Outlet & Location"
                ],
                "summary": "Get outlet details by id",
                "description": "Get outlet details by outlet_id",
                "operationId": "6b8477c0fe4bf86389652c647603e78b",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/outlet-delivery-location": {
            "get": {
                "tags": [
                    "Outlet & Location"
                ],
                "summary": "Get outlet delivery location list",
                "description": "Get outlet delivery location list",
                "operationId": "f5d06c6f613e66cb100c919669d065e3",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/outlet-delivery-location/{outletId}": {
            "get": {
                "tags": [
                    "Outlet & Location"
                ],
                "summary": "Get outlet delivery location list by outlet_id",
                "description": "Get outlet delivery location list by outlet_id, When a customer selects one of these location, they will only see the products of that specific outlets throughout the whole website...",
                "operationId": "e42f44523eaa7e00398f9a2962ebf532",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/outlet/{locationId}": {
            "get": {
                "tags": [
                    "Outlet & Location"
                ],
                "summary": "Get outlet info by delivery_id",
                "description": "Get outlet info by delivery location id, When a customer selects a location, they will only see the products of that specific outlets throughout the whole website...",
                "operationId": "2468415b94c165d53654ac5994c88eb6",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/orders-list/{outlet_id}": {
            "get": {
                "tags": [
                    "POS Orders"
                ],
                "summary": "Get outlet orders list",
                "operationId": "672b144754dbd5c7addc81e9e04d9d93",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders-list/{outlet_id}/{status}": {
            "get": {
                "tags": [
                    "POS Orders"
                ],
                "summary": "Get outlet orders list by status",
                "operationId": "8fa117a852b06a6ef520a62eee003454",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/orders-details/{outlet_id}/{order_id}": {
            "get": {
                "tags": [
                    "POS Orders"
                ],
                "summary": "Get order details by outlet id and order id",
                "operationId": "2ef784623c431f04e2a5d89d20941234",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/order-process": {
            "post": {
                "tags": [
                    "POS Orders"
                ],
                "summary": "Update order",
                "description": "Returns project data",
                "operationId": "update",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id",
                                    "outlet_id",
                                    "status"
                                ],
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "example": "39753"
                                    },
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": "5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Order updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/online-order/payment": {
            "post": {
                "tags": [
                    "POS Payment"
                ],
                "summary": "Receive Online payment",
                "description": "Receive online payment when customer comes to the outlet for order pickup",
                "operationId": "payment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id",
                                    "outlet_id",
                                    "transaction_amount",
                                    "payer_name",
                                    "payer_phone"
                                ],
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "example": "39753"
                                    },
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "transaction_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": "5156.25"
                                    },
                                    "payer_name": {
                                        "type": "string",
                                        "example": "Md Frank"
                                    },
                                    "payer_phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "something"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-category": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category full list or short list as your requirement.",
                "description": "By default this end-point will provide a short list of category with three column 'id', 'title', 'slug'). For full list you have to provide a body param with the key 'list_type' and value = full_list. Pass body param with the key 'slider_menu' and value = 'menu_view' to get all the categories for Slider-Menu.  Used in: index",
                "operationId": "ac7ee3580085523b8e5e1a00809550f5",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "list_type"
                                ],
                                "properties": {
                                    "list_type": {
                                        "type": "string",
                                        "example": "short_list"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/create-category": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create new category",
                "description": "Returns project data",
                "operationId": "create-category",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Category Title Here"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "Category Slug Here"
                                    },
                                    "logo": {
                                        "type": "file",
                                        "example": "Logo.jpg"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": "3121"
                                    },
                                    "pos_cat_id": {
                                        "type": "integer",
                                        "example": "52"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "44"
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Brand Title Here"
                                        },
                                        "slug": {
                                            "type": "string",
                                            "example": "Brand Slug Here"
                                        },
                                        "author_id": {
                                            "type": "integer",
                                            "example": "3121"
                                        },
                                        "logo": {
                                            "type": "file",
                                            "example": "Logo.jpg"
                                        },
                                        "updated_at": {
                                            "type": "timestamps",
                                            "example": "2022-03-15T07:09:21.000000Z"
                                        },
                                        "created_at": {
                                            "type": "timestamps",
                                            "example": "2022-03-15T07:09:21.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/edit-category": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Edit a category",
                "description": "Returns project data",
                "operationId": "edit-category",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "pos_cat_id",
                                    "outlet_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Category Title Here"
                                    },
                                    "logo": {
                                        "type": "file",
                                        "example": "Logo.jpg"
                                    },
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "2302"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/all-category-top-menu": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category list for home_page_top_menu.",
                "description": "By default this end-point will provide category list where 'home_page_top_menu' = 1. This response used in just beneath the main slide  Used in: index",
                "operationId": "754fcb7f7323893d38d6869641620de1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/all-category-slide": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category list for the menu just left side in the main slider.",
                "description": "Get category list for the menu just left side in the main slider.",
                "operationId": "3fb511fba76449e47b6d3c22ba6cdcac",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/all-local-product/{outletId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get local product list by outlet with target audience 0.",
                "description": "Get local product list by outlet_id where global audience is 0. use parameter page_size=5 to set pagination '/api/all-local-product/{outletId}?per_page=2' value, by default per_page=15",
                "operationId": "c20c1dad6c0853cb3c18305c1dc23982",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-flash-sale-products/{outletId}": {
            "get": {
                "tags": [
                    "Flash Sale & Products"
                ],
                "summary": "Get Flash Sale product list in random order.",
                "description": "Get Flash Sale product list in random order with detailed product flash discount and price.use parameter page_size=5 to set pagination '/api/get-flash-sale-products/{outletId}?per_page=2' value, by default per_page=15",
                "operationId": "e677d928c3e76b873d7e30b0ba77d7f1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-flash-sale-info": {
            "get": {
                "tags": [
                    "Flash Sale & Products"
                ],
                "summary": "Get Flash Sale info.",
                "description": "Get Flash Sale info like, Flash Sale active or not, Flash Sale start and end date.",
                "operationId": "22a192226d130b9ae5d8fcdcdaf69d91",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-flash-sale-status": {
            "get": {
                "tags": [
                    "Flash Sale & Products"
                ],
                "summary": "Get Flash active status.",
                "description": "Get Flash Sale active status.",
                "operationId": "53fc36ac2a29175797fe8e03abc7ed0d",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/all-product-by-category-id": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product list according to category ID.",
                "description": "By default this end-point will provide all records according to given category_id and outlet_id. Required parameter 'category_id' and 'outlet_id', optional parameters 'random', 'page_size;. Then you can get custom number of records per page by providing a body param with the key 'page_size'. Also get random records by 'random' = true.",
                "operationId": "8b92ea52795cc61a328375be99b699b7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "outlet_id"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": "114"
                                    },
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "random": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "page_size": {
                                        "type": "integer",
                                        "example": "10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-product-price/{productId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product price by product_id.",
                "description": "Returns product price by product_id as parameter",
                "operationId": "1d253e2d115649e8a3d3d14ab41d73fa",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-product-details": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details by outlet_id and product_id/product_sku/slug.",
                "description": "Returns product details by outlet_id and product_id/product_sku/slug, pass outlet_id and one of three product_id, product_sku or slug",
                "operationId": "e5ad12ba030b41deb717a75597993092",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "outlet_id"
                                ],
                                "properties": {
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": "2699"
                                    },
                                    "product_sku": {
                                        "type": "integer",
                                        "example": "61e5432891f01"
                                    },
                                    "slug": {
                                        "type": "integer",
                                        "example": "Barclay-Johnston-629895043b12a"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-category-by-product/{productId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get category list by product_id.",
                "description": "Returns category list and details by product_id as parameter",
                "operationId": "6db6fb4ae7fa7dd96a1f040dd65396ba",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/all-category-main": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Get only mother category from categories table.",
                "description": "By default this end-point will provide 10 mother category from categories table. For custom number of records you have to provide a body param with the key 'limit' and value must be an integer.  Used in: index",
                "operationId": "169eab2d13831e01c5ecd2790d2b8a6e",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "limit"
                                ],
                                "properties": {
                                    "limit": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/get-brand/{limit}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get brand list with it's all data.",
                "description": "By default the limit parameter is /all. use neumaric value to set limit",
                "operationId": "5f3dfd270a7151425d25e293c664e293",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/api/create-brand": {
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Store new brand",
                "description": "Returns project data",
                "operationId": "create-brand",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Brand Title Here"
                                    },
                                    "logo": {
                                        "type": "file",
                                        "example": "Logo.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "example": "Brand Title Here"
                                        },
                                        "slug": {
                                            "type": "string",
                                            "example": "Brand Slug Here"
                                        },
                                        "logo": {
                                            "type": "file",
                                            "example": "Logo.jpg"
                                        },
                                        "updated_at": {
                                            "type": "timestamps",
                                            "example": "2022-03-15T07:09:21.000000Z"
                                        },
                                        "created_at": {
                                            "type": "timestamps",
                                            "example": "2022-03-15T07:09:21.000000Z"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": "44"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/edit-brand": {
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Edit a brand",
                "description": "Returns project data",
                "operationId": "edit-brand",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand_id",
                                    "pos_brand_id"
                                ],
                                "properties": {
                                    "brand_id": {
                                        "type": "string",
                                        "example": "652"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Brand Title Here"
                                    },
                                    "logo": {
                                        "type": "file",
                                        "example": "Logo.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/add-master-product": {
            "post": {
                "tags": [
                    "POS Products"
                ],
                "summary": "Add master products from outlet with product description",
                "description": "Add master product from outlet. Enter product details as required parameters",
                "operationId": "outlet-product",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_title",
                                    "product_sku",
                                    "outlet_id",
                                    "full_description",
                                    "outlet_id",
                                    "payer_phone"
                                ],
                                "properties": {
                                    "product_title": {
                                        "type": "string",
                                        "example": "Test Title"
                                    },
                                    "product_sku": {
                                        "type": "string",
                                        "example": "sku123332"
                                    },
                                    "short_description": {
                                        "type": "string",
                                        "example": "Some description"
                                    },
                                    "full_description": {
                                        "type": "string",
                                        "example": "Some more description"
                                    },
                                    "brand_id": {
                                        "type": "integer",
                                        "example": "192"
                                    },
                                    "category_id[0]": {
                                        "type": "integer",
                                        "example": "1589"
                                    },
                                    "category_id[1]": {
                                        "type": "integer",
                                        "example": "1598"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "rs-20"
                                    },
                                    "product_price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": "19500.00"
                                    },
                                    "product_quantity": {
                                        "type": "integer",
                                        "example": "50"
                                    },
                                    "outlet_id": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "example": "percentage/flat"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": "20.00"
                                    },
                                    "cover_image": {
                                        "type": "file",
                                        "example": "image file"
                                    },
                                    "image_1": {
                                        "type": "file",
                                        "example": "another image file"
                                    },
                                    "image_2": {
                                        "type": "file",
                                        "example": "again image file"
                                    },
                                    "image_3": {
                                        "type": "file",
                                        "example": "also image file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/get-products/{outletId}/{limit}": {
            "get": {
                "tags": [
                    "POS Products"
                ],
                "summary": "Get product list by outlet_id with limit in random order where target audience is 0.",
                "description": "Returns project data in random order by outlet_id with limit, pass parameter 'all' to get all products in random order",
                "operationId": "cb7239784c65c32ac03c17f9d46a578b",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Register",
                "description": "Returns project data",
                "operationId": "register",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "salam.pustcse@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Xample Demo"
                ],
                "summary": "Logout",
                "description": "Logout user and invalidate token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/nh-registration": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "NH Registration",
                "description": "This end-point will be used for registration new user. You have to provide body params with the keys of- 'username', 'password', 'password_confirmation', and 'email' (Optional). The 'username' must be a valid phone number and password length at least 6 digit. After registration, system will send an OTP to given username (phone), that you must verify in '/api/registration-otp-verify'.",
                "operationId": "nh-registration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "password_confirmation",
                                    "email"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "name@domain.com"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "customer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/registration-otp-verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Registration OTP",
                "description": "This end-point will be used for verify Registration OTP.",
                "operationId": "registration-otp-verify",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "user_otp"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "user_otp": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/nh-login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "NH Login",
                "description": "Login by username, password. Username must be phone number and 11 digit.",
                "operationId": "nh-login",
                "requestBody": {
                    "description": "Pass user credentials (username and password).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorised username or password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/nh-logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "NH Logout",
                "description": "Logout user and invalidate token",
                "operationId": "nh logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "string",
                                            "example": "basic user info"
                                        },
                                        "login_status": {
                                            "type": "string",
                                            "example": "false"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/nh-forget-password-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get OTP for Forget Password",
                "description": "This end-point will provide OTP for Forget Password. You have to pass body param with the key name 'username' and it must be a valid phone number, already registered.",
                "operationId": "nh-forget-password-otp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forget-password-otp-verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP for Forget Password",
                "description": "For verify the 'Forget Password OTP' you have to pass body param with the key 'username' and 'user_otp'.",
                "operationId": "forget-password-otp-verify",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "user_otp": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password-reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update Password",
                "description": "This end-point will update previous password with given password. You have to pass body param with the key 'username', 'password' and 'password_confirmation'.",
                "operationId": "password-reset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "01xxxxxxxxx"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "This will return user_info, msg, status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_info": {
                                            "type": "string",
                                            "example": "Basic information of the user"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Password has been updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logged-in-user-info": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get logged in user info list",
                "operationId": "91959ec2b0a0c5426833db09e065b0d8",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/logged-in-user-address-codes": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get logged in user address ids",
                "operationId": "a81ed5bceb8b461215d94180b5fedf16",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/logged-in-user-address": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get logged in user address details",
                "operationId": "ed2abb9a880a7b1bb4ba297907a446d1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorize Access, Invalid Token or Token has expired",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Order": {
                "title": "Order Model",
                "description": "Store order request body data",
                "properties": {
                    "client": {
                        "title": "client",
                        "description": "Name of the new client",
                        "type": "string",
                        "example": "Dr SalaryMan"
                    },
                    "details": {
                        "title": "details",
                        "description": "details of the order",
                        "type": "string",
                        "example": "Dr SalaryMan"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "title": "Payment Model",
                "description": "Store payment request body data",
                "type": "object"
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "http",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    }
}